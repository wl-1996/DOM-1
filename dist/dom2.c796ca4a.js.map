{"version":3,"sources":["dom2.js"],"names":["window","dom","find","node","document","querySelectorAll","style","name","value","arguments","length","Object","key","each","fn","nodeList","i","call"],"mappings":"AAAAA,MAAM,CAACC,GAAP,GAAa;AACXC,EAAAA,IADW,gBACNC,IADM,EACA;AACT,WAAOC,QAAQ,CAACC,gBAAT,CAA0BF,IAA1B,CAAP;AACD,GAHU;AAIXG,EAAAA,KAJW,iBAILH,IAJK,EAICI,IAJD,EAIOC,KAJP,EAIc;AACvB;AACA,QAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1BP,MAAAA,IAAI,CAACG,KAAL,CAAWC,IAAX,IAAmBC,KAAnB;AACD,KAFD,CAGA;AAHA,SAIK,IAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC/B;AACA,YAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AAC5B,iBAAOJ,IAAI,CAACG,KAAL,CAAWC,IAAX,CAAP;AACD,SAFD,CAGA;AAHA,aAIK,IAAIA,IAAI,YAAYI,MAApB,EAA4B;AAC/B,gBAAMA,OAAM,GAAGJ,IAAf,CAD+B,CAE/B;;AACA,iBAAK,IAAIK,GAAT,IAAgBD,OAAhB,EAAwB;AACtBR,cAAAA,IAAI,CAACG,KAAL,CAAWM,GAAX,IAAkBD,OAAM,CAACC,GAAD,CAAxB;AACD;AACF;AACF;AACF,GAxBU;AAyBX;AACAC,EAAAA,IA1BW,gBA0BNV,IA1BM,EA0BAW,EA1BA,EA0BI;AACb,QAAMC,QAAQ,GAAGd,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAjB;;AACA,SAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACL,MAA7B,EAAqCM,CAAC,EAAtC,EAA0C;AACxCF,MAAAA,EAAE,CAACG,IAAH,CAAQ,IAAR,EAAcF,QAAQ,CAACC,CAAD,CAAtB;AACD;AACF,GA/BU,CAgCX;AACA;AACA;AACA;AACA;AACA;;AArCW,CAAb","file":"dom2.c796ca4a.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  find(node) {\r\n    return document.querySelectorAll(node);\r\n  },\r\n  style(node, name, value) {\r\n    //三个参数：改样式。例如：dom.style(div, \"color\", \"red\")\r\n    if (arguments.length === 3) {\r\n      node.style[name] = value;\r\n    }\r\n    //两个参数：可能改样式也可能是读样式。分情况讨论\r\n    else if (arguments.length === 2) {\r\n      //name参数为字符串,则读属性。例如：dom.style(div,'color')\r\n      if (typeof name === \"string\") {\r\n        return node.style[name];\r\n      }\r\n      //name参数为对象，则改属性。例如：dom.style(div,{border:1px solid red,font-size:40px})\r\n      else if (name instanceof Object) {\r\n        const Object = name;\r\n        //遍历object，读到object里所有的key\r\n        for (let key in Object) {\r\n          node.style[key] = Object[key];\r\n        }\r\n      }\r\n    }\r\n  },\r\n  //遍历，这是我自己的想法，下边是方方的写法，少许不同\r\n  each(node, fn) {\r\n    const nodeList = dom.find(node);\r\n    for (let i = 0; i < nodeList.length; i++) {\r\n      fn.call(null, nodeList[i]);\r\n    }\r\n  }\r\n  //   下边是方老师的写法，上边是我自己的写法，少许不同\r\n  //   each(nodeList, fn) {\r\n  //     for (let i = 0; i < nodeList.length; i++) {\r\n  //       fn.call(null, nodeList[i]);\r\n  //     }\r\n  //   }\r\n};\r\n"]}